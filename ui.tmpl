<!DOCTYPE html>
<html>
  <head>
    <title>HTTP/2 Viz</title>
    <link rel="icon" href="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%2016%2016'%3E%3Ctext%20x='0'%20y='14'%3E🌐%3C/text%3E%3C/svg%3E" type="image/svg+xml" />
    <style type="text/css">
      :root {
        --arrow-width: 40px;
        --arrow-depth: calc(0% + var(--arrow-width));
        --reverse-arrow-depth: calc(100% - var(--arrow-depth));
        --crystal: #acddde;
        --aero-blue: #caf1de;
        --nyanza: #e1f8dc;
        --cornsilk: #fef8dd;
        --bisque: #ffe7c7;
        --sandy-tan: #f7d8ba;
      }

      body {
        font-family: sans-serif;
      }

      .container {
        display: flex;
        flex-direction: row;
      }

      .column {
        display: flex;
        flex: 1;
        flex-direction: column;
      }

      .client, .proxy, .server {
        align-items: center;
        background-color: var(--sandy-tan);
        flex: 1;
        justify-content: center;
      }

      .connection {
        background-color: var(--crystal);
        box-shadow: inset 0 0 4px #000;
        flex: 2;
        padding: 15px;
      }

      .stream {
        background-color: var(--cornsilk);
        clip-path: polygon(0 0, var(--reverse-arrow-depth) 0, 100% 50%, var(--reverse-arrow-depth) 100%, 0 100%);
        flex: 1;
        padding: 15px;
        padding-right: var(--arrow-width);
        margin: 15px 0;
      }

      .stream.stream-reversed {
        clip-path: polygon(0 50%, var(--arrow-depth) 0, 100% 0, 100% 100%, var(--arrow-depth) 100%);
        padding-left: var(--arrow-width);
      }

      dt {
        font-weight: bold;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="column client">
        <h2>Client</h2>
        <div>
          <input type="checkbox" id="client-http2" name="client-http2" {{ if .ClientUseHTTP2 }} checked {{ end }} />
          <label for="client-http2">Request HTTP/2</label>
        </div>
      </div>
      <div class="column connection">
        <div class="stream">
          <h4>Client Request</h4>
          <dl>
            <dt>Protocol</dt>
            <dd>{{ .ClientResponse.ProxyResponse.RequestProtocol }}</dd>
          </dl>
        </div>
        <div class="stream stream-reversed">
          <h4>Proxy Response</h4>
          <dl>
            <dt>Protocol</dt>
            <dd>{{ .ClientResponse.ResponseProtocol }}</dd>
            <dt>Code</dt>
            <dd>{{ .ClientResponse.ResponseCode }}</dd>
          </dl>
        </div>
      </div>
      <div class="column proxy">
        <h2>Proxy</h2>
        <div>
          <input type="checkbox" id="proxy-http2" name="proxy-http2" {{ if .ProxyUseHTTP2 }} checked {{ end }} />
          <label for="proxy-http2">Request HTTP/2</label>
        </div>
      </div>
      <div class="column connection">
        <div class="stream">
          <h4>Proxy Request</h4>
          <dl>
            <dt>Protocol</dt>
            <dd>{{ .ClientResponse.ServerResponse.RequestProtocol }}</dd>
          </dl>
        </div>
        <div class="stream stream-reversed">
          <h4>Server Response</h4>
        </div>
      </div>
      <div class="column server">
        <h2>Server</h2>
      </div>
    </div>
  </body>
  <script type="application/javascript">
    const searchParams = new URLSearchParams(window.location.search);
    const handleCheck = (e) => {
      target = e.target.name
      searchParams.set(target, e.target.checked);
      window.location.search = searchParams.toString();
    };
    document.querySelector('input#client-http2').addEventListener('click', handleCheck);
    document.querySelector('input#proxy-http2').addEventListener('click', handleCheck);
  </script>
</html>
